<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.su.dao.UserDao">
	<resultMap id="BaseUserMap" type="com.su.entity.User">
		<result column="ID" property="id" jdbcType="INTEGER" />
		<result column="USER_NAME" property="username" jdbcType="VARCHAR" />
		<result column="PASSWORD" property="password" jdbcType="VARCHAR" />
		<result column="NIKE" property="nike" jdbcType="VARCHAR" />
		<result column="ROLE_ID" property="roleId" jdbcType="INTEGER" />
		<result column="CREATE_ID" property="createId" jdbcType="INTEGER" />
		<result column="STATUS" property="status" jdbcType="INTEGER" />

	</resultMap>
	<select id="getUserInfo" parameterType="java.util.Map"
		resultMap="BaseUserMap">
		select * from sys_user
		where user_name=#{name}
		and
		password=#{password} and status &gt;0
	</select>
	
	<select id="queryPage" parameterType="java.util.Map" resultMap="BaseUserMap">
		select * from sys_user
		<where>
			and  CREATE_ID > 0
			and STATUS = 1
		</where>
		limit #{beginIndex},#{endIndex}

	</select>
	<select id="queryPageCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(id) as id from sys_user
		<where>
			and  CREATE_ID > 0
			and  STATUS =  1
		</where>
	</select>
	<insert id="insert" parameterType="com.su.entity.User" useGeneratedKeys="true" keyColumn="ID">
		insert into sys_user ( USER_NAME, PASSWORD,
		NIKE, ROLE_ID,
		CREATE_ID,
		STATUS)
		values (
		#{username,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{nike,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER},
		#{createId,jdbcType=INTEGER},
		#{status,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.su.entity.User">
		insert into sys_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ID,
			<if test="username != null">
				USER_NAME,
			</if>
			<if test="password != null">
				PASSWORD,
			</if>
			<if test="nike != null">
				NIKE,
			</if>
			<if test="roleId != null">
				ROLE_ID,
			</if>
			<if test="createId != null">
				CREATE_ID,
			</if>
			<if test="status != null">
				STATUS,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{id,jdbcType=INTEGER},
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="nike != null">
				#{nike,jdbcType=VARCHAR},
			</if>
			<if test="roleId != null">
				#{roleId,jdbcType=INTEGER},
			</if>
			<if test="createId != null">
				#{createId,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.su.entity.User">
		update sys_user
		<set>
			<if test="username != null">
				USER_NAME = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				PASSWORD = #{password,jdbcType=VARCHAR},
			</if>
			<if test="nike != null">
				NIKE = #{nike,jdbcType=VARCHAR},
			</if>
			<if test="roleId != null">
				ROLE_ID = #{roleId,jdbcType=INTEGER},
			</if>
			<if test="createId != null">
				CREATE_ID = #{createId,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				STATUS = #{status,jdbcType=INTEGER},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.su.entity.User">
		update sys_user
		set USER_NAME = #{username,jdbcType=VARCHAR},
		PASSWORD =
		#{password,jdbcType=VARCHAR},
		NIKE = #{nike,jdbcType=VARCHAR},
		ROLE_ID =
		#{roleId,jdbcType=INTEGER},
		CREATE_ID = #{createId,jdbcType=INTEGER},
		STATUS = #{status,jdbcType=INTEGER}
		where ID = #{id,jdbcType=INTEGER}
	</update>

<sql id="Base_Column_List" >
    ID, USER_NAME, PASSWORD, NIKE, ROLE_ID, CREATE_ID, STATUS
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseUserMap" parameterType="java.lang.Integer" >
    select ID, USER_NAME, PASSWORD, NIKE, ROLE_ID, CREATE_ID, STATUS
 
    from sys_user
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <select id="queryByName" resultMap="BaseUserMap"  parameterType="java.lang.String">
   select ID, USER_NAME, PASSWORD, NIKE, ROLE_ID, CREATE_ID, STATUS
 
    from sys_user
    where USER_NAME=#{userName}
  
  </select>
</mapper>